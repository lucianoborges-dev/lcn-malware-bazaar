using System.Net;
using LcN.MalwareBazaar.ApiClient.Services;
using Moq;
using Moq.Protected;
using Newtonsoft.Json.Linq;

namespace LcN.MalwareBazaar.ClientTests;

[TestClass]
public class BazaarApiClientTests
{
    [TestMethod]
    public async Task TestMethod1()
    {
        // Arrange
        var sample = System.IO.File.ReadAllText("/home/luciano/Source/repos/github/LucianoBorges-Dev/lcn-malware-bazaar/tests/LcN.MalwareBazaar.ClientTests/sample.json");
        var bazaarHttpClient = CreateHttpClient(HttpStatusCode.OK, sample);
        var bazaarApiClient = new BazaarApiClient(bazaarHttpClient);

        // Act
        var response = await bazaarApiClient.GetInfo("43db42b4ba232a67c442de8f05e12d61d8bd1c84061d8f0a73d4bab0f9629cfa");
        var json = JObject.Parse(response);

        // Assert
        Assert.AreEqual("77459eb8f65bfbfe7fa5af7966a90391", json["data"][0]["md5_hash"]);
    }

    private static BazaarHttpClient CreateHttpClient(HttpStatusCode statusCode, string content)
 {
     var handlerMock = new Mock<HttpMessageHandler>();
     handlerMock
         .Protected()
         .Setup<Task<HttpResponseMessage>>(
             "SendAsync",
             ItExpr.IsAny<HttpRequestMessage>(),
             ItExpr.IsAny<CancellationToken>()
         )
         .ReturnsAsync(new HttpResponseMessage
         {
             StatusCode = statusCode,
             Content = new StringContent(content),
         })
         .Verifiable();

     return new BazaarHttpClient(new HttpClient(handlerMock.Object){ BaseAddress = new Uri("https://host.io") });
 }
}