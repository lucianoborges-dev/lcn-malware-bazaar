namespace LcN.MalwareBazaar.Client.Interfaces;
public interface IBazaarApiClient
{
    /// <summary>
    /// Query ClamAV signature
    /// </summary>
    /// <param name="clamav">ClamAV signature you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetClamAVInfo(string clamav, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query Code Signing Certificate Blocklist (CSCB)
    /// </summary>
    /// <returns></returns>
    Task<string> GetCSCB(CancellationToken cancellationToken = default);

    /// <summary>
    /// Query icon dhash
    /// </summary>
    /// <param name="dhashIcon">The icon's dhash you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetDHashIcon(string dhashIcon, int limit, CancellationToken cancellationToken = default);

    /// <summary>
    /// Retrieve (download) a malware sample
    /// </summary>
    /// <param name="sha256Hash">SHA256 hash of the malware sample you want to download</param>
    /// <returns></returns>
    Task<Stream> GetFile(string sha256Hash, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query filetype
    /// </summary>
    /// <param name="fileType">Tag you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetFileType(string fileType, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query imphash
    /// </summary>
    /// <param name="imphash">imphash you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetImphash(string imphash, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query a malware sample (hash)
    /// </summary>
    /// <param name="hash">SHA256, MD5 or SHA1 hash of the malware sample you want to query</param>
    /// <returns></returns>
    Task<string> GetInfo(string hash, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query Code Signing Certificates (by Issuer CN)
    /// </summary>
    /// <param name="issuerCN">Exact Issuer Common Name (CN) of the certificate authority that issued the certificate</param>
    /// <returns></returns>
    Task<string> GetIssuerInfo(string issuerCN, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query latest malware samples (recent additions)
    /// </summary>
    /// <param name="limit">Get the latest N additions</param>
    /// <returns></returns>
    Task<string> GetRecentByLimit(int limit, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query latest malware samples (recent additions)
    /// Uses 'time selector': get additions made within the past 60 minutes
    /// </summary>
    /// <returns></returns>
    Task<string> GetRecentByTime(CancellationToken cancellationToken = default);

    /// <summary>
    /// Query signature
    /// </summary>
    /// <param name="signature">Tag you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetSigInfo(string signature, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query Code Signing Certificates (by Subject CN)
    /// </summary>
    /// <param name="subjectCN">Exact Subject Common Name (CN) of the code signing certificate</param>
    /// <returns></returns>
    Task<string> GetSubjectInfo(string subjectCN, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query tag
    /// </summary>
    /// <param name="tag">Tag you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetTagInfo(string tag, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query telfhash
    /// </summary>
    /// <param name="telfhash">telfhash hash you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetTelfHash(string telfhash, int limit, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query TLSH
    /// </summary>
    /// <param name="tlsh">TLSH hash you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetTLSH(string tlsh, int limit = 0, CancellationToken cancellationToken = default);

    /// <summary>
    /// Query YARA rule
    /// </summary>
    /// <param name="yaraRule">Name of the YARA rule (rule_name) you want to get malware samples for</param>
    /// <param name="limit">Optional: Max number of results you want to display (default: 100, max: 1'000)</param>
    /// <returns></returns>
    Task<string> GetYaraInfo(string yaraRule, int limit, CancellationToken cancellationToken = default);
}
